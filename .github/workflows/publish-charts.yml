name: Publish Charts

on:
  push:
    branches: [main]
    paths:
      - 'charts/**'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    name: Package and Publish
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.2

      - name: Add repositories
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add codecentric https://codecentric.github.io/helm-charts
          helm repo add tjungbauer https://charts.stderr.at/
          
          # Try to add our own repo if it exists (for dependencies)  
          helm repo add jeanlopezxyz https://jeanlopezxyz.github.io/helm-charts 2>/dev/null || echo "Own repository not yet available"
          
          helm repo update

      - name: Package charts
        run: |
          mkdir -p packages
          
          # First pass: Package charts without dependencies
          echo "=== First pass: Charts without external dependencies ==="
          for chart in charts/*/; do
            if [ -f "$chart/Chart.yaml" ]; then
              chart_name=$(basename $chart)
              echo "Checking $chart_name"
              
              # Skip charts with external dependencies on first pass
              if ! grep -q "repository:" "$chart/Chart.yaml" 2>/dev/null; then
                echo "Packaging $chart_name (no external deps)"
                helm package "$chart" --destination packages
              else
                echo "Skipping $chart_name (has external deps)"
              fi
            fi
          done
          
          # Second pass: Package charts with dependencies (best effort)
          echo "=== Second pass: Charts with dependencies ==="
          for chart in charts/*/; do
            if [ -f "$chart/Chart.yaml" ]; then
              chart_name=$(basename $chart)
              
              # Only process charts with dependencies
              if grep -q "repository:" "$chart/Chart.yaml" 2>/dev/null; then
                echo "Attempting to package $chart_name"
                
                # Try to update dependencies, continue on failure
                if helm dependency update "$chart" 2>/dev/null; then
                  echo "Dependencies updated successfully for $chart_name"
                else
                  echo "Warning: Could not update dependencies for $chart_name, packaging anyway"
                fi
                
                # Package the chart
                if helm package "$chart" --destination packages 2>/dev/null; then
                  echo "Successfully packaged $chart_name"
                else
                  echo "Warning: Failed to package $chart_name"
                fi
              fi
            fi
          done
          
          echo "=== Packaging summary ==="
          ls -la packages/ || echo "No packages created"

      - name: Update repository
        run: |
          cd gh-pages
          
          # Copy chart packages if they exist
          if ls ../packages/*.tgz 1> /dev/null 2>&1; then
            echo "Copying chart packages"
            cp ../packages/*.tgz .
          else
            echo "No chart packages found"
          fi
          
          # Copy Artifact Hub metadata
          cp ../artifacthub-repo.yml . 2>/dev/null || true
          
          # Generate Helm repository index
          helm repo index . --url https://jeanlopezxyz.github.io/helm-charts
          
          # Verify Artifact Hub compatibility
          if command -v ah &> /dev/null; then
            ah lint --kind helm || echo "Artifact Hub linting completed"
          fi
          
          echo "=== Repository contents ==="
          ls -la

      - name: Copy website assets
        run: |
          cd gh-pages
          mkdir -p assets
          cp ../assets/* assets/ 2>/dev/null || true

      - name: Copy static website
        run: |
          cd gh-pages
          cp ../docs/index.html . || echo "Static HTML not found, creating basic one"
          
          # Fallback if docs/index.html doesn't exist
          if [ ! -f "index.html" ]; then
            echo "Creating basic index.html"
            echo '<!DOCTYPE html><html><head><title>Helm Charts</title><link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"></head><body><div class="container my-5"><h1 class="text-center">Helm Charts Repository</h1><p class="text-center">Add repo: <code>helm repo add jeanlopezxyz https://jeanlopezxyz.github.io/helm-charts</code></p></div></body></html>' > index.html
          fi

      - name: Deploy
        run: |
          cd gh-pages
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git add .
          git commit -m "Update charts and website"
          git push origin gh-pages