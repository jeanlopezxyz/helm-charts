apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "setup-platform-sonarqube.fullname" . }}
  namespace: {{ include "setup-platform-sonarqube.namespace" . }}
  labels:
    {{- include "setup-platform-sonarqube.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "setup-platform-sonarqube.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "setup-platform-sonarqube.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "setup-platform-sonarqube.serviceAccountName" . }}
      containers:
        - name: sonarqube
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: sonarqube
              containerPort: {{ .Values.sonarqube.properties.web.port }}
              protocol: TCP
          env:
            - name: SONAR_JDBC_URL
              value: {{ include "setup-platform-sonarqube.postgresql.url" . | quote }}
            {{- if .Values.postgresql.enabled }}
            - name: SONAR_JDBC_USERNAME
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: SONAR_JDBC_PASSWORD
              value: {{ .Values.postgresql.auth.password | quote }}
            {{- else }}
            - name: SONAR_JDBC_USERNAME
              value: {{ .Values.sonarqube.jdbc.username | quote }}
            - name: SONAR_JDBC_PASSWORD
              value: {{ .Values.sonarqube.jdbc.password | quote }}
            {{- end }}
            - name: SONAR_WEB_HOST
              value: {{ .Values.sonarqube.properties.web.host | quote }}
            - name: SONAR_WEB_PORT
              value: {{ .Values.sonarqube.properties.web.port | quote }}
            - name: SONAR_WEB_CONTEXT
              value: {{ .Values.sonarqube.properties.web.context | quote }}
            - name: SONAR_SEARCH_HOST
              value: {{ .Values.sonarqube.properties.search.host | quote }}
            - name: SONAR_SEARCH_PORT
              value: {{ .Values.sonarqube.properties.search.port | quote }}
            {{- if .Values.sonarqube.jvm.options }}
            - name: SONAR_WEB_JAVAADDITIONALOPTS
              value: {{ .Values.sonarqube.jvm.options | quote }}
            {{- end }}
            {{- if .Values.sonarqube.defaultAdminPassword }}
            - name: SONAR_ADMIN_PASSWORD
              value: {{ .Values.sonarqube.defaultAdminPassword | quote }}
            {{- end }}
            {{- range .Values.env }}
            - {{- toYaml . | nindent 14 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /api/system/status
              port: sonarqube
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /api/system/status
              port: sonarqube
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          startupProbe:
            httpGet:
              path: /api/system/status
              port: sonarqube
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 60
            successThreshold: 1
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: sonarqube-data
              mountPath: /opt/sonarqube/data
            - name: sonarqube-extensions
              mountPath: /opt/sonarqube/extensions
            - name: sonarqube-logs
              mountPath: /opt/sonarqube/logs
            {{- range .Values.extraVolumeMounts }}
            - {{- toYaml . | nindent 14 }}
            {{- end }}
      volumes:
        - name: sonarqube-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "setup-platform-sonarqube.fullname" . }}-data
          {{- else }}
          emptyDir:
            sizeLimit: 5Gi
          {{- end }}
        - name: sonarqube-extensions
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "setup-platform-sonarqube.fullname" . }}-extensions
          {{- else }}
          emptyDir:
            sizeLimit: 2Gi
          {{- end }}
        - name: sonarqube-logs
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "setup-platform-sonarqube.fullname" . }}-logs
          {{- else }}
          emptyDir:
            sizeLimit: 2Gi
          {{- end }}
        {{- range .Values.extraVolumes }}
        - {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}