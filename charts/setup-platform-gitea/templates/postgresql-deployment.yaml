{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "setup-platform-gitea.fullname" . }}-postgresql
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "setup-platform-gitea.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  serviceName: {{ include "setup-platform-gitea.fullname" . }}-postgresql
  replicas: 1
  selector:
    matchLabels:
      {{- include "setup-platform-gitea.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "setup-platform-gitea.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: postgresql
        image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
        imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: [ALL]
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        env:
        - name: POSTGRESQL_DATABASE
          value: {{ .Values.postgresql.auth.database | quote }}
        - name: POSTGRESQL_USER
          value: {{ .Values.postgresql.auth.username | quote }}
        - name: POSTGRESQL_PASSWORD
          value: {{ .Values.postgresql.auth.password | quote }}
        - name: POSTGRESQL_ADMIN_PASSWORD
          value: {{ .Values.postgresql.auth.rootPassword | quote }}
        ports:
        - name: postgresql
          containerPort: {{ .Values.postgresql.service.port }}
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - pg_isready -h 127.0.0.1 -p {{ .Values.postgresql.service.port }} -U {{ .Values.postgresql.auth.username }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - pg_isready -h 127.0.0.1 -p {{ .Values.postgresql.service.port }} -U {{ .Values.postgresql.auth.username }}
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        {{- with .Values.postgresql.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/pgsql/data
  {{- if .Values.postgresql.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
      labels:
        {{- include "setup-platform-gitea.labels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      accessModes:
        - {{ .Values.postgresql.persistence.accessMode }}
      resources:
        requests:
          storage: {{ .Values.postgresql.persistence.size }}
      {{- if .Values.postgresql.persistence.storageClass }}
      storageClassName: {{ .Values.postgresql.persistence.storageClass }}
      {{- end }}
  {{- else }}
  - metadata:
      name: postgresql-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: "1Gi"
  {{- end }}
{{- end }}