apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "setup-platform-gitea.fullname" . }}
  namespace: {{ .Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    {{- include "setup-platform-gitea.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "setup-platform-gitea.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "setup-platform-gitea.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "setup-platform-gitea.serviceAccountName" . }}
      initContainers:
        - name: init-config
          image: registry.redhat.io/ubi9/ubi-minimal:latest
          command:
            - /bin/sh
            - -c
            - |
              mkdir -p /tmp/gitea/conf /tmp/gitea/log /tmp/gitea/data /tmp/gitea/custom
              mkdir -p /data/git/repositories /data/git/.ssh
              # Create basic config file and SSH files
              touch /tmp/gitea/conf/app.ini
              touch /data/git/.ssh/authorized_keys /data/git/.ssh/authorized_keys.tmp
              chmod -R 777 /tmp/gitea /data/git
          volumeMounts:
            - name: data
              mountPath: /data
            - name: tmp
              mountPath: /tmp
          securityContext:
            runAsUser: 1001
            allowPrivilegeEscalation: false
      containers:
        - name: gitea
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: GITEA__database__DB_TYPE
              value: postgres
            - name: GITEA__database__HOST
              value: "{{ include "setup-platform-gitea.fullname" . }}-postgresql:{{ .Values.postgresql.service.port }}"
            - name: GITEA__database__NAME
              value: "{{ .Values.postgresql.auth.database }}"
            - name: GITEA__database__USER
              value: "{{ .Values.postgresql.auth.username }}"
            - name: GITEA__database__PASSWD
              value: "{{ .Values.postgresql.auth.password }}"
            - name: GITEA__repository__ROOT
              value: /data/git/repositories
            - name: GITEA__server__DOMAIN
              value: {{ .Values.route.host | default "gitea.local" }}
            - name: GITEA__server__HTTP_PORT
              value: "3000"
            - name: GITEA__server__ROOT_URL
              value: https://{{ .Values.route.host | default "gitea.local" }}
            # OpenShift compatibility - let container handle user
            - name: USER
              value: "git"
            - name: USER_UID
              value: "1001"
            - name: USER_GID
              value: "1001"
            - name: RUN_MODE
              value: "prod"
            - name: GITEA__security__INSTALL_LOCK
              value: "true"  # Skip setup wizard
            - name: GITEA_WORK_DIR
              value: "/tmp/gitea"
            - name: GITEA_CUSTOM
              value: "/tmp/gitea/custom"
            # OpenShift specific configuration - disable everything that needs file permissions
            - name: GITEA__server__DISABLE_SSH
              value: "true"
            - name: GITEA__server__START_SSH_SERVER
              value: "false"
            - name: GITEA__security__DISABLE_GIT_HOOKS
              value: "true"
            - name: GITEA__repository__ENABLE_PUSH_CREATE_USER
              value: "false"
            - name: GITEA__repository__ENABLE_PUSH_CREATE_ORG
              value: "false"
            - name: GITEA__log__ROOT_PATH
              value: "/tmp/gitea/log"
            - name: GITEA__log__MODE
              value: "console"
            - name: GITEA__server__APP_DATA_PATH
              value: "/tmp/gitea/data"
            - name: GITEA__picture__DISABLE_GRAVATAR
              value: "true"
            - name: GITEA__indexer__REPO_INDEXER_ENABLED
              value: "false"
            # Critical: Override config path to avoid /etc/gitea
            - name: GITEA_APP_INI
              value: "/tmp/gitea/conf/app.ini"
            - name: GITEA__DEFAULT__APP_NAME
              value: "Gitea Git Server"
          volumeMounts:
            - name: data
              mountPath: /data
            - name: tmp
              mountPath: /tmp
            - name: var-lib-gitea
              mountPath: /var/lib/gitea
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "setup-platform-gitea.fullname" . }}-data
          {{- else }}
          emptyDir: 
            sizeLimit: 10Gi
          {{- end }}
        - name: tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: var-lib-gitea
          emptyDir:
            sizeLimit: 500Mi
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}