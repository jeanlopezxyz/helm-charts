# Namespace
namespace:
  create: true
  name: "bookstack"

replicaCount: 1

image:
  repository: lscr.io/linuxserver/bookstack
  tag: "latest"  # Use latest available tag
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 80

# OpenShift Route
route:
  enabled: true
  host: ""
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  annotations: {}

resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 50m
    memory: 128Mi

# Security Context (OpenShift compatible)
podSecurityContext:
  # Let OpenShift assign UIDs automatically
  fsGroup: 0

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false

# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""
  automountServiceAccountToken: false

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Helpers integration
helpers:
  objectstore:
    enabled: true
    backup:
      schedule: "0 2 * * *"
      retention: "30d"
      targets:
        - mariadb-database
        - bookstack-uploads
        - bookstack-config

# Bookstack Configuration
config:
  timezone: "America/Lima"
  appUrl: "https://bookstack.apps.cluster.company.com"
  appKey: "base64:RandomGeneratedKey1234567890ABCDEFGHIJKLMNOP"
  
  # Mail configuration
  mail:
    enabled: false
    driver: "smtp"
    host: ""
    port: "587"
    encryption: "tls"
    username: ""
    password: ""
    fromAddress: ""
    fromName: ""

# Documentation Git Sync Configuration
documentation:
  enabled: false
  
  # Git Sync settings
  gitSync:
    enabled: false
    image: "k8s.gcr.io/git-sync/git-sync:v3.6.3"
    pullPolicy: "IfNotPresent"
    
    # Multiple repositories
    repositories:
      policies:
        enabled: false
        url: ""
        branch: "main"
        interval: 600  # 10 minutes
        mountPath: "/docs/policies"
        # Optional: for private repos
        secret: ""
        
      templates:
        enabled: false
        url: ""
        branch: "main"
        interval: 300  # 5 minutes
        mountPath: "/docs/templates"
        secret: ""
        
      userDocs:
        enabled: false
        url: ""
        branch: "main"
        interval: 120  # 2 minutes
        mountPath: "/docs/user"
        secret: ""
        
  # Persistent storage for git repos
  persistence:
    enabled: true
    size: "5Gi"
    storageClass: ""
    accessMode: "ReadWriteOnce"
  
# Database
mariadb:
  enabled: true
  auth:
    rootPassword: "bookstack-root-password"
    username: "bookstack"
    password: "bookstack-password"
    database: "bookstackapp"
  primary:
    persistence:
      enabled: false  # Disabled due to CSI driver issues
      size: 5Gi
      storageClass: "ocs-external-storagecluster-cephfs"
    # OpenShift Security Context
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false
  # Service Account configuration
  serviceAccount:
    create: true
  rbac:
    create: false

# RBAC - Required for OpenShift SCC
rbac:
  create: true  # Creates ClusterRoleBinding to anyuid SCC

# Persistent storage for uploads
persistence:
  uploads:
    enabled: false  # Disabled due to CSI issues
    size: 5Gi
    storageClass: "ocs-external-storagecluster-cephfs"
    accessModes:
      - ReadWriteMany
  storage:
    enabled: false  # Disabled due to CSI issues
    size: 2Gi
    storageClass: "ocs-external-storagecluster-cephfs"
    accessModes:
      - ReadWriteMany

# Node scheduling
nodeSelector: {}

tolerations:
  - key: node-role.kubernetes.io/master
    operator: Exists
    effect: NoSchedule
  - key: node-role.kubernetes.io/control-plane
    operator: Exists
    effect: NoSchedule

affinity: {}